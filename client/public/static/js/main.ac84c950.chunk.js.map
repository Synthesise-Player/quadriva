{"version":3,"sources":["logo.svg","config/index.js","utils/apiRequests.js","components/search/index.jsx","utils/index.js","components/choices/index.jsx","components/question/index.jsx","App.jsx","index.jsx"],"names":["module","exports","origin","console","log","config","search","query","axios","get","getTracks","id","getQuestion","track","post","Search","setPlaylist","useState","playlists","setPlaylists","setQuery","handleSubmit","e","a","async","preventDefault","data","items","map","name","imgUrl","images","url","playlistsDiv","style","role","tabIndex","onClick","onKeyPress","src","alt","className","type","onChange","target","value","placeholder","onTouchStart","shuffle","arr","i","length","j","Math","floor","random","Choices","answer","incorrectAnswers","textColour","isRevealed","options","setOptions","choices","setChoices","useEffect","shuffledOptions","revealed","option","hidden","color","getMusic","playing","Question","setColour","shiftQuestion","stage","setStage","question","setQuestion","refContainer","useRef","fetchData","content","handleClick","answers","message","onLoad","colorThief","ColorThief","img","current","getColor","crossOrigin","ref","previewUrl","calculateTextColour","r","g","b","round","ReactDOM","render","tracks","setTracks","colour","toString","logo","splice","document","getElementById"],"mappings":"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","file":"static/js/main.ac84c950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const port = 4200;\n\n// For debug\n// console.log('process.env');\n// console.log(process.env);\n// console.log('port', port);\n// console.log('process.env.REACT_APP_SERVER_LOCATION');\n// console.log(process.env.REACT_APP_SERVER_LOCATION);\n\nconst origins = {\n//   cloud: 'https://reunite.eu-gb.cf.appdomain.cloud',\n  local: `https://us-central1-quadrivia-ed25a.cloudfunctions.net/bigben`,\n//   'local-network': `http://169.254.XXX.XX:${port}`, // Set this to your Private IP address\n};\n\n// const serverLocation = process.env.REACT_APP_SERVER_LOCATION || 'local';\nconst serverLocation = 'local';\n\nconst origin = origins[serverLocation];\n\nconsole.log(`Client expects server at origin: ${origin}`);\n\nmodule.exports = {\n  origin,\n};\n","import axios from 'axios';\nimport config from '../config';\n\nconst { origin } = config;\n\nconst search = (query) => axios.get(`${origin}/api/v1/search?q=${query}`);\n\nconst getTracks = (id) => axios.get(`${origin}/api/v1/playlists/${id}/tracks`);\n\nconst getQuestion = (track) => axios.post(`${origin}/api/v1/questions`, track);\n\nexport {\n  search,\n  getTracks,\n  getQuestion,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { search } from '../../utils/apiRequests';\n\nimport './index.css';\n\n// React.initializeTouchEvents(true);\nconst Search = ({ setPlaylist }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (query !== '') {\n      const { data } = await search(query);\n      setPlaylists(data.playlists.items.map(({ name, id, images }) => ({\n        name, id, imgUrl: images[0].url,\n      })));\n    }\n  };\n\n  const handleChange = (e) => setQuery(e.target.value);\n\n  const playlistsDiv = playlists.map(({ name, id, imgUrl }) => (\n    <div style={{'outline':'0'}} role=\"button\" tabIndex={0} onClick={() => setPlaylist(id)} onKeyPress={() => setPlaylist(id)}>\n      <h1>{name}</h1>\n      <img src={imgUrl} alt={name} />\n    </div>\n  ));\n\n  return (\n    <div>\n      <form className=\"example\">\n        <input type=\"text\" onChange={handleChange} placeholder=\"Search..\" name=\"search\" />\n        <button type=\"submit\" onTouchStart={handleSubmit} onClick={handleSubmit}>Search</button>\n      </form>\n      {playlistsDiv}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  setPlaylist: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","function shuffle(arr) {\n  const a = arr;\n  for (let i = a.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n};\n\nexport { shuffle };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { shuffle } from '../../utils';\n\nimport './index.css';\n\nexport default function Choices({\n  answer, incorrectAnswers, textColour, isRevealed,\n}) {\n  const [options, setOptions] = useState([{}, {}, {}, {}]);\n  const [choices, setChoices] = useState([]);\n\n  useEffect(() => {\n    const shuffledOptions = shuffle([\n      { value: answer,  revealed: <p className=\"text-success\">{answer}</p> },\n      ...incorrectAnswers.map((option) => ({ value: option, revealed: <p className=\"text-danger\">{option}</p> })),\n    ]);\n    setOptions(shuffledOptions);\n  }, [answer, ...incorrectAnswers]);\n\n  useEffect(() => {\n    setChoices(options.map((option) => ({...option, hidden: <p style={{ color: textColour }}>{option.value}</p>})));\n  }, [textColour, ...options]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        {choices.map((option) => <div className=\"col-sm-6\">{isRevealed ? option.revealed : option.hidden}</div>)}\n      </div>\n    </div>\n  );\n}\n\nChoices.propTypes = {\n  answer: PropTypes.string.isRequired,\n  incorrectAnswers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  textColour: PropTypes.string.isRequired,\n  isRevealed: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactPlayer from 'react-player';\nimport PropTypes from 'prop-types';\nimport ColorThief from 'colorthief';\n\nimport { getQuestion } from '../../utils/apiRequests';\n\nimport Choices from '../choices';\n\nimport './index.css';\n\nconst calculateTextColour = ([r, g, b]) => {\n  const o = Math.round(((r * 299) + (g * 587) + (b * 114)) / 1000);\n  return (o > 125) ? 'black' : 'white';\n};\n\nconst getMusic = (id) => <ReactPlayer url={id} playing />;\n\nexport default function Question({\n  track, setColour, shiftQuestion, textColour,\n}) {\n  const [stage, setStage] = useState(0);\n  const [question, setQuestion] = useState();\n\n  const refContainer = useRef(null);\n\n  const handleImageLoaded = () => {\n    const colorThief = new ColorThief();\n    const img = refContainer.current;\n    setColour(colorThief.getColor(img, 10));\n  };\n\n  useEffect(() => {\n    if (track) {\n      const fetchData = async () => {\n        const { data } = await getQuestion(track);\n        setQuestion(data);\n      };\n      fetchData();\n    }\n  }, [track]);\n\n  const handleClick = () => {\n    if (stage === 0) {\n      setStage(stage + 1);\n    } else {\n      setStage(0);\n      shiftQuestion();\n    }\n  };\n\n  let content;\n\n  if (question) {\n    const { answer, incorrectAnswers } = question;\n    const answers = <Choices isRevealed={stage === 1} answer={answer} incorrectAnswers={incorrectAnswers} textColour={textColour} />;\n    content = (\n      <div className=\"question\">\n        <h1 style={{ 'font-size': '5vw', color: textColour }}>{question.message}</h1>\n        <img onLoad={handleImageLoaded} crossOrigin=\"anonymous\" ref={refContainer} src={question.imgUrl} className=\"Record\" alt=\"albumImage\" />\n        {answers}\n        {getMusic(question.previewUrl)}\n      </div>\n    );\n  }\n\n  return (\n    <div style={{'outline':'0'}} role=\"button\" tabIndex={0} onKeyPress={() => handleClick()} onClick={() => handleClick()}>\n      {content}\n    </div>\n  );\n}\n\nQuestion.propTypes = {\n  track: PropTypes.shape({\n    album: PropTypes.object.isRequired,\n    id: PropTypes.number.isRequired,\n    artists: PropTypes.array.isRequired,\n    preview_url: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  setColour: PropTypes.func.isRequired,\n  shiftQuestion: PropTypes.func.isRequired,\n  textColour: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Search, Question } from './components';\nimport { getTracks } from './utils/apiRequests';\nimport { shuffle } from './utils';\n\nconst calculateTextColour = ([r, g, b]) => {\n  const o = Math.round(((r * 299) + (g * 587) + (b * 114)) / 1000);\n  return (o > 125) ? 'black' : 'white';\n};\n\nexport default () => {\n  const [tracks, setTracks] = useState();\n  const [colour, setColour] = useState([40, 44, 52]);\n\n  const setPlaylist = async (id) => {\n    const { data } = await getTracks(id);\n    setTracks(shuffle(data));\n  };\n\n  const foo = () => {\n    if (tracks.length === 1) {\n      setTracks(null);\n    } else {\n      setTracks(tracks.splice(1));\n    }\n    // setColour(colour);\n  };\n\n  return (\n    // <div style={{ background: `rgb(${colour.toString()})` }} className=\"App\">\n    <div style={{ 'background': `rgb(${colour.toString()}) url(connected.png)` }} className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{ 'font-size': '5vw', color: calculateTextColour(colour) }}>Quadrivia</h1>\n        {!tracks ? <img src={logo} className=\"App-logo\" alt=\"logo\" /> : null}\n        {!tracks ? <Search setPlaylist={setPlaylist} /> : null}\n        {tracks && tracks.length > 0 ? <Question style={{'outline':'0'}} textColour={calculateTextColour(colour)} setColour={setColour} shiftQuestion={() => foo()} track={tracks[0]} /> : null}\n      </header>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}